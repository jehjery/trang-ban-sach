package jobdao;

import java.util.ArrayList;

import org.bson.Document;
import org.bson.conversions.Bson;

import com.google.gson.Gson;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Filters;
import com.mongodb.client.model.Updates;

import connectDB.connectDB;
import jobbean.blogbean;
import jobbean.loaibean;
import jobbean.sanphambean;

public class blogdao {
	MongoDatabase database = connectDB.getInstance();
	MongoCollection<Document> Collection = database.getCollection("tbBlog");
	public ArrayList<jobbean.blogbean> getloai() {
		// TODO Auto-generated method stub
		return null;
	}

	public ArrayList<blogbean> findAll() {
		ArrayList<blogbean> listloai = new ArrayList<>();
		Collection.find().forEach(doc ->  
		{
			Gson gson = new Gson();
			loaibean loai = gson.fromJson(doc.toJson(), blogbean.class);
			listloai.add(loai);
//			System.out.println(listloai.size());
		});
		return listloai;
	}

	
	public void insert(loaibean l) {
		Gson gson = new Gson();
		Document doc = Document.parse(gson.toJson(l));
		Collection.insertOne(doc);
	}

	 public Document updatesoluong(loaibean a,sanphambean b ) {		
		Bson filters = Filters.eq("maloai",b.getMaloai());		
		Bson updata= Updates.set("soluongsanpham", a.getsoluongsanpham()+b.getSoluong());
		return Collection.findOneAndUpdate(filters, updata);
	}
	 public Document resetsoluong(loaibean a ) {		
		Bson filters = Filters.eq("maloai",a.getMaloai());		
		Bson updata= Updates.set("soluongsanpham", 0);
		return Collection.findOneAndUpdate(filters, updata);
	} 
	 
	public Document update(loaibean l) {
//		System.out.println(l.getMaloai());
//		Gson gson = new Gson();
//		Document doc = Document.parse(gson.toJson(l));
		
		Bson filters = Filters.eq("maloai", l.getMaloai());		
		Bson updata= Updates.set("tenloai", l.getTenloai());
		return Collection.findOneAndUpdate(filters, updata);
	}
	
	public Document delete(String maloai) {
		Bson filters = Filters.eq("maloai", maloai);		
		return Collection.findOneAndDelete(filters);
	}
}
}
